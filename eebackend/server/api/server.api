syntax = "v1"

info (
	title:   "EasySpeedSmartShop API"
	desc:    "Backend API interface for the EasySpeedSmartShop project"
	author:  "Maicarons"
	date:    "2023-12-24"
	version: "v1"
)

// Request for product actions such as "add", "update", "delete"
type ProductActionReq {
	ProductID string `json:"product_id"` // The ID of the product
	Action    string `json:"action"`     // The action to be performed
}

// Response for product actions
type ProductActionResp {
	Success bool   `json:"success"` // Indicates if the action was successful
	Message string `json:"message"` // Description of the action result
}

// Request for inventory actions such as "increase", "decrease"
type InventoryActionReq {
	InventoryID string `json:"inventory_id"` // The ID of the inventory
	Action      string `json:"action"`       // The action to be performed
}

// Response for inventory actions
type InventoryActionResp {
	Success bool   `json:"success"` // Indicates if the action was successful
	Message string `json:"message"` // Description of the action result
}

// Request for order actions such as "create", "cancel", "complete"
type OrderActionReq {
	OrderID string `json:"order_id"` // The ID of the order
	Action  string `json:"action"`   // The action to be performed
}

// Response for order actions
type OrderActionResp {
	Success bool   `json:"success"` // Indicates if the action was successful
	Message string `json:"message"` // Description of the action result
}

// Request for system setting actions such as "modify", "query"
type SystemSettingActionReq {
	SettingID string `json:"setting_id"` // The ID of the system setting
	Action    string `json:"action"`     // The action to be performed
}

// Response for system setting actions
type SystemSettingActionResp {
	Success bool   `json:"success"` // Indicates if the action was successful
	Message string `json:"message"` // Description of the action result
}

@server (
	prefix: /api/v1 // API version prefix
)
service server {
	// Product action interface
	@handler productAction
	post /product/action (ProductActionReq) returns (ProductActionResp)

	// Inventory action interface
	@handler inventoryAction
	post /inventory/action (InventoryActionReq) returns (InventoryActionResp)

	// Order action interface
	@handler orderAction
	post /order/action (OrderActionReq) returns (OrderActionResp)

	// Test interface for order actions
	@handler orderActionTest
	post /order/action/test (OrderActionReq) returns (OrderActionResp)

	// System setting action interface
	@handler systemSettingAction
	post /system/setting/action (SystemSettingActionReq) returns (SystemSettingActionResp)
}